[tool.coverage.run]
source = ["ah/"]
omit = ["ah/vendors/*", "ah/protobuf/*", "ah/ui/*"]
branch = true
data_file = ".coverage"

[tool.coverage.report]
show_missing = true

[tool.semantic_release]
version_variables = ["ah/__init__.py:__version__"]
# changes to these files are commited to the repo
# but also uploaded as assets to the release :/
assets = [
    "ah/data/bonuses_curves.json",
]
commit_message = "chore(release): {version} [skip ci]\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
build_command = "make clean-build && make clean-data-qm && make clean-data-bonus && make"
[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "chore*",
    "ci*",
    "test*",
    "build*",
    "Merge*"
]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "jeeves <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
# GH_TOKEN is for action (docker) version, it's what passed inside the container
# GITHUB_TOKEN is what we have in CI env
env = "GITHUB_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/archive.zip"]
upload_to_vcs_release = true
